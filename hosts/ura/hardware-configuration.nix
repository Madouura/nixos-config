# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/2ac89a94-b93f-4727-99d8-28b7520c8adc";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/4dace9ec-7f59-4d6c-b1b8-ae2ba7ed85fb";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/41FD-39A2";
      fsType = "vfat";
    };

  fileSystems."/mnt/cach" =
    { device = "/dev/disk/by-uuid/de8b8d17-d13f-4bad-bb21-a92a9f8bcc31";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."cryptcach".device = "/dev/disk/by-uuid/18e47211-d45d-4bac-8fce-fcf0ffcba10e";

  fileSystems."/mnt/stor" =
    { device = "/dev/disk/by-uuid/5566bd6d-22f2-4d59-bac4-6cc1dcf788de";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."cryptstor".device = "/dev/disk/by-uuid/97501d0c-7164-4238-9b94-291eb6ae78fb";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/a8e45243-e6ae-47a3-b3a8-965c2eb0ed98"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
}
